<?php

namespace backend\modules\kehoach\models;

use backend\models\Orders;
use backend\models\OrderInfo;
use backend\models\Schedule;
use backend\models\Content;
use backend\models\User;

use Yii;

/**
 * This is the model class for table "qli_kehoach_giaoviec".
 *
 * @property string $id_ke_hoach
 * @property integer $id_cong_doan
 * @property integer $id_nhan_vien
 * @property integer $thoi_gian_nhan
 * @property integer $thoi_gian_hoan_thanh
 * @property integer $trang_thai
 * @property string $ghi_chu
 *
 * @property Kehoach $idKeHoach
 */
class KehoachGiaoviec extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    const CHUANHAN = 1;
    const DANGLAM = 2;
    const HOANTHANH = 3;
    const TRALAI = 4;

    public static function tableName()
    {
        return 'qli_kehoach_giaoviec';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['id_ke_hoach', 'id_cong_doan', 'id_nhan_vien'], 'required'],
            [['id_ke_hoach', 'id_cong_doan', 'id_nhan_vien',  'trang_thai'], 'integer'],
            [['ghi_chu'], 'string', 'max' => 255],
            [['thoi_gian_nhan', 'thoi_gian_hoan_thanh','thoi_gian_tra_lai'], 'safe'],
            [['id_ke_hoach'], 'exist', 'skipOnError' => true, 'targetClass' => Kehoach::className(), 'targetAttribute' => ['id_ke_hoach' => 'kehoach_id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id_ke_hoach' => 'Kế hoạch',
            'id_cong_doan' => 'Công đoạn',
            'id_nhan_vien' => 'Nhân viên',
            'thoi_gian_nhan' => 'Thời gian nhận',
            'thoi_gian_hoan_thanh' => 'Thời gian hoàn thành',
            'thoi_gian_tra_lai' => 'Thời gian trả lại',
            'trang_thai' => 'Trạng thái',
            'ghi_chu' => 'Ghi chú',
        ];
    }

    public function beforeSave($insert)
    {
       
        if(empty($this->trang_thai)) $this->trang_thai = self::CHUANHAN;
        
        if(!empty($this->thoi_gian_tra_lai)) $this->thoi_gian_tra_lai = date('Y-m-d H:i:s',strtotime($this->thoi_gian_tra_lai));
        if(!empty($this->thoi_gian_nhan)) $this->thoi_gian_nhan = date('Y-m-d H:i:s',strtotime($this->thoi_gian_nhan));
        if(!empty($this->thoi_gian_hoan_thanh)) $this->thoi_gian_hoan_thanh = date('Y-m-d H:i:s',strtotime($this->thoi_gian_hoan_thanh));

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }


    public function afterFind()
   {           
        if(!empty($this->thoi_gian_tra_lai)) $this->thoi_gian_tra_lai = date('H:i d-m-Y',strtotime($this->thoi_gian_tra_lai));
        if(!empty($this->thoi_gian_nhan)) $this->thoi_gian_nhan = date('H:i d-m-Y',strtotime($this->thoi_gian_nhan));
        if(!empty($this->thoi_gian_hoan_thanh)) $this->thoi_gian_hoan_thanh = date('H:i d-m-Y',strtotime($this->thoi_gian_hoan_thanh));
   
        parent::afterFind();
   }


    public static function getTrangthaiOptions()
    {
        return [
            self::CHUANHAN => 'Chưa nhận',
            self::DANGLAM => 'Đang làm',
            self::HOANTHANH => 'Hoàn thành',
            self::TRALAI => 'Trả lại',
        ];
    }

    public static function getTrangthaiLabel($value = '')
    {
        $array = self::getTrangthaiOptions();
        if ($value === null || !array_key_exists($value, $array))
            return '';
        return $array[$value];
    }
   


    public function getTennhanvien()
    {
        $value = $this->id_nhan_vien;
        $user = User::findOne(['user_id' => $value]);
        if($user) return $user->fullname;
        return '';
    }


    /**
     * @return \yii\db\ActiveQuery
     */
    public function getIdKeHoach()
    {
        return $this->hasOne(Kehoach::className(), ['kehoach_id' => 'id_ke_hoach']);
    }
}
